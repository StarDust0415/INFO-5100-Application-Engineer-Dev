/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Airliner;
import Business.Plane;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author gaorong
 */
public class SearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchJPanel
     */
    private Airliner aln;
    public SearchJPanel(Airliner aln) {
        this.aln = aln;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        fliter1 = new javax.swing.JButton();
        fliter2 = new javax.swing.JButton();
        fliter3 = new javax.swing.JButton();
        fliter4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAvailable = new javax.swing.JCheckBox();
        btnUnavailable = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtAirport = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMinSeat = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtMaxSeat = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSerialNumber = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtModelNumberF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        fliter5 = new javax.swing.JButton();
        fliter6 = new javax.swing.JButton();
        fliter7 = new javax.swing.JButton();
        fliter8 = new javax.swing.JButton();
        fliter9 = new javax.swing.JButton();
        fliter11 = new javax.swing.JButton();
        fliter10 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePlane = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableUpdateTime = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        timeLable = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        serialNumLabel = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        mantenLabel = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        manuLabel = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        airportLabel = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        modelNumLabel = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        availLabel = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        yearLabel = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        fliter1.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter1.setForeground(new java.awt.Color(51, 51, 51));
        fliter1.setText("Fliter1");
        fliter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter1ActionPerformed(evt);
            }
        });

        fliter2.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter2.setForeground(new java.awt.Color(51, 51, 51));
        fliter2.setText("Fliter2");
        fliter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter2ActionPerformed(evt);
            }
        });

        fliter3.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter3.setForeground(new java.awt.Color(51, 51, 51));
        fliter3.setText("Fliter3");
        fliter3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter3ActionPerformed(evt);
            }
        });

        fliter4.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter4.setForeground(new java.awt.Color(51, 51, 51));
        fliter4.setText("Fliter4");
        fliter4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("1. Find me the first available airplane.");

        jLabel2.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("2. How many airplanes are currently");

        buttonGroup1.add(btnAvailable);
        btnAvailable.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        btnAvailable.setForeground(new java.awt.Color(51, 51, 51));
        btnAvailable.setText("Available");

        buttonGroup1.add(btnUnavailable);
        btnUnavailable.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        btnUnavailable.setForeground(new java.awt.Color(51, 51, 51));
        btnUnavailable.setText("Unavailable");

        jLabel3.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("3. List all airplanes that are made by Boeing.");

        jLabel4.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("4. List all planes that were manufactured in year:");

        txtAirport.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        txtAirport.setForeground(new java.awt.Color(51, 51, 51));

        jLabel5.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("5. Find an available plane with a min");

        txtMinSeat.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        txtMinSeat.setForeground(new java.awt.Color(51, 51, 51));

        jLabel6.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("and max");

        txtMaxSeat.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        txtMaxSeat.setForeground(new java.awt.Color(51, 51, 51));

        jLabel7.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("seats.");

        jLabel8.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("6. Find an airplane with the given serial number.");

        txtSerialNumber.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        txtSerialNumber.setForeground(new java.awt.Color(51, 51, 51));

        txtYear.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        txtYear.setForeground(new java.awt.Color(51, 51, 51));

        jLabel9.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("7. List all airplanes given the model number.");

        txtModelNumberF.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        txtModelNumberF.setForeground(new java.awt.Color(51, 51, 51));

        jLabel10.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("8. List all the airplane manufacturers used by the (this) airliner.");

        jLabel11.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("9. When was the last time the fleet catalog was updated.");

        jLabel12.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("10. List all planes that are available in airport:");

        jLabel13.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("11. List all airplanes that have expired maintenance certificate.");

        fliter5.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter5.setForeground(new java.awt.Color(51, 51, 51));
        fliter5.setText("Fliter5");
        fliter5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter5ActionPerformed(evt);
            }
        });

        fliter6.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter6.setForeground(new java.awt.Color(51, 51, 51));
        fliter6.setText("Fliter6");
        fliter6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter6ActionPerformed(evt);
            }
        });

        fliter7.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter7.setForeground(new java.awt.Color(51, 51, 51));
        fliter7.setText("Fliter7");
        fliter7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter7ActionPerformed(evt);
            }
        });

        fliter8.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter8.setForeground(new java.awt.Color(51, 51, 51));
        fliter8.setText("Fliter8");
        fliter8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter8ActionPerformed(evt);
            }
        });

        fliter9.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter9.setForeground(new java.awt.Color(51, 51, 51));
        fliter9.setText("Fliter9");
        fliter9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter9ActionPerformed(evt);
            }
        });

        fliter11.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter11.setForeground(new java.awt.Color(51, 51, 51));
        fliter11.setText("Fliter11");
        fliter11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter11ActionPerformed(evt);
            }
        });

        fliter10.setFont(new java.awt.Font("PingFang HK", 1, 14)); // NOI18N
        fliter10.setForeground(new java.awt.Color(51, 51, 51));
        fliter10.setText("Fliter10");
        fliter10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fliter10ActionPerformed(evt);
            }
        });

        tablePlane.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Serial Number", "Model Number"
            }
        ));
        jScrollPane1.setViewportView(tablePlane);

        jLabel14.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 102, 102));
        jLabel14.setText("Plane");

        tableUpdateTime.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null}
            },
            new String [] {
                "Last Updated Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableUpdateTime);

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 102, 102));
        jLabel15.setText("Last Updated Time");

        jLabel23.setFont(new java.awt.Font("Menlo", 1, 14)); // NOI18N
        jLabel23.setText("Take-off time:");

        timeLable.setForeground(new java.awt.Color(204, 204, 204));
        timeLable.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel25.setFont(new java.awt.Font("Menlo", 1, 14)); // NOI18N
        jLabel25.setText("Serial Num:");

        serialNumLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel26.setFont(new java.awt.Font("Menlo", 1, 14)); // NOI18N
        jLabel26.setText("Mantenance:");

        mantenLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel27.setFont(new java.awt.Font("Menlo", 1, 14)); // NOI18N
        jLabel27.setText("Manufacturer:");

        manuLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel24.setFont(new java.awt.Font("Menlo", 1, 14)); // NOI18N
        jLabel24.setText("AirPort:");

        airportLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel29.setFont(new java.awt.Font("Menlo", 1, 14)); // NOI18N
        jLabel29.setText("Model Num:");

        modelNumLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel31.setFont(new java.awt.Font("Menlo", 1, 14)); // NOI18N
        jLabel31.setText("Availability:");

        availLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel33.setFont(new java.awt.Font("Menlo", 1, 14)); // NOI18N
        jLabel33.setText(" Year:");

        yearLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(manuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mantenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel25))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(timeLable, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(serialNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(102, 102, 102)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel24)
                            .addComponent(jLabel33)
                            .addComponent(jLabel31))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(availLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(fliter10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fliter11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fliter9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fliter8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fliter7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fliter6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fliter5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fliter4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fliter3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fliter2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fliter1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtModelNumberF, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAvailable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUnavailable))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAirport, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMinSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fliter1)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fliter2)
                            .addComponent(jLabel2)
                            .addComponent(btnAvailable)
                            .addComponent(btnUnavailable))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fliter3)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fliter4)
                            .addComponent(jLabel4)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtMinSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtMaxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(fliter5))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel15)
                        .addGap(21, 21, 21)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fliter6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fliter7)
                            .addComponent(jLabel9)
                            .addComponent(txtModelNumberF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fliter8)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fliter9)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fliter10)
                            .addComponent(jLabel12)
                            .addComponent(txtAirport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fliter11)
                            .addComponent(jLabel13))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(airportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(modelNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(yearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel33))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(timeLable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(serialNumLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel25))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(manuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel27))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mantenLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26))))
                        .addGap(22, 22, 22))))
        );

        jLabel17.setFont(new java.awt.Font("Skia", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 102, 255));
        jLabel17.setText("Search Airplane Information");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fliter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter1ActionPerformed
        // TODO add your handling code here:
        tablePlane.getColumnModel().getColumn(1).setHeaderValue("Take-off Time");
        jScrollPane1.updateUI();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        DefaultTableModel dtm = (DefaultTableModel)tablePlane.getModel();
        Date now = new Date();
        long min = Long.MAX_VALUE;
        for(Plane pl : aln.getAirliner())
        {
            
            if(pl.getSchedule().getIsavailable()){
                try {
                    Date takeoff = df.parse(pl.getSchedule().getTakeOffTime());
                    long diff = takeoff.getTime()-now.getTime();
                    if(diff<min)
                        min = diff;
                } catch (ParseException ex) {
                    Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                   
        }
        
        for(Plane pl : aln.getAirliner())
        {
            
            if(pl.getSchedule().getIsavailable()){
                try {
                    Date takeoff = df.parse(pl.getSchedule().getTakeOffTime());
                    long diff = takeoff.getTime()-now.getTime();
                    if(diff==min)
                    {
                       Object row[] = new Object[2];
                       row[0] = pl;
                       row[1] = pl.getSchedule().getTakeOffTime();
                       dtm.addRow(row);
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                   
        }
        
        
    }//GEN-LAST:event_fliter1ActionPerformed

    private void fliter2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter2ActionPerformed
        // TODO add your handling code here:
        tablePlane.getColumnModel().getColumn(1).setHeaderValue("Available");
        jScrollPane1.updateUI();
        boolean findAvail =  btnAvailable.isSelected();
        
        DefaultTableModel dtm = (DefaultTableModel)tablePlane.getModel();
        dtm.setRowCount(0);
        if(findAvail)
        {
            for(Plane pl : aln.getAirliner())
            {
                if(pl.getSchedule().getIsavailable())
                {
                  Object row[] = new Object[2];
                  row[0] = pl;
                  row[1] = pl.getSchedule().getIsavailable();
                  dtm.addRow(row);
                }      
            }
        }else{
             for(Plane pl : aln.getAirliner())
            {
                if(!pl.getSchedule().getIsavailable())
                {
                  Object row[] = new Object[2];
                  row[0] = pl;
                  row[1] = pl.getSchedule().getIsavailable();
                  dtm.addRow(row);
                }      
            }
        }
    }//GEN-LAST:event_fliter2ActionPerformed

    private void fliter3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter3ActionPerformed
        // TODO add your handling code here:
       tablePlane.getColumnModel().getColumn(1).setHeaderValue("Manufacturer");
       jScrollPane1.updateUI();
       DefaultTableModel dtm = (DefaultTableModel)tablePlane.getModel(); 
       for(Plane pl : aln.getAirliner())
       {
            if(pl.getManufacture().equals("Boeing"))
            {
                  Object row[] = new Object[2];
                  row[0] = pl;
                  row[1] = pl.getManufacture();
                  dtm.addRow(row);
            }      
       }
    }//GEN-LAST:event_fliter3ActionPerformed

    private void fliter4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter4ActionPerformed
        // TODO add your handling code here:
       tablePlane.getColumnModel().getColumn(1).setHeaderValue("Manufacturer Year");
       jScrollPane1.updateUI();
       DefaultTableModel dtm = (DefaultTableModel)tablePlane.getModel(); 
       String year = txtYear.getText();
       for(Plane pl : aln.getAirliner())
       {
            if(pl.getYear().equals(year))
            {
                  Object row[] = new Object[2];
                  row[0] = pl;
                  row[1] = pl.getYear();
                  dtm.addRow(row);
            }      
       }
    }//GEN-LAST:event_fliter4ActionPerformed

    private void fliter5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter5ActionPerformed
        // TODO add your handling code here:
       tablePlane.getColumnModel().getColumn(1).setHeaderValue("Seats Number");
       jScrollPane1.updateUI();
       DefaultTableModel dtm = (DefaultTableModel)tablePlane.getModel(); 
       int max = Integer.parseInt(txtMaxSeat.getText());
       int min = Integer.parseInt(txtMinSeat.getText());
       
       for(Plane pl : aln.getAirliner())
       {
            if(pl.getSeatsNumber()<=max && pl.getSeatsNumber()>=min)
            {
                  Object row[] = new Object[2];
                  row[0] = pl;
                  row[1] = pl.getSeatsNumber();
                  dtm.addRow(row);
            }      
       }
    }//GEN-LAST:event_fliter5ActionPerformed

    private void fliter6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter6ActionPerformed
        // TODO add your handling code here:
        tablePlane.getColumnModel().getColumn(1).setHeaderValue("Model Number");
        jScrollPane1.updateUI();
        String serialNum = txtSerialNumber.getText();
        DefaultTableModel dtm = (DefaultTableModel)tablePlane.getModel();
        for(Plane pl : aln.getAirliner())
       {
            if(pl.getSerialNumber().equals(serialNum))
            {
                  Object row[] = new Object[2];
                  row[0] = pl;
                  row[1] = pl.getModelNumber();
                  dtm.addRow(row);
                  mantenLabel.setText((pl.getIsExpired()+""));
                  manuLabel.setText(pl.getManufacture());
                  modelNumLabel.setText(pl.getModelNumber());
                  serialNumLabel.setText(pl.getSerialNumber());
                  yearLabel.setText(pl.getYear());
                  timeLable.setText(pl.getSchedule().getTakeOffTime());
                  airportLabel.setText(pl.getSchedule().getAirport());
                  availLabel.setText(pl.getSchedule().getIsavailable()+"");
            }      
       }
    }//GEN-LAST:event_fliter6ActionPerformed

    private void fliter7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter7ActionPerformed
        // TODO add your handling code here:
        tablePlane.getColumnModel().getColumn(1).setHeaderValue("Model Number");
        jScrollPane1.updateUI();
        String modelNum = txtModelNumberF.getText();
        DefaultTableModel dtm = (DefaultTableModel)tablePlane.getModel();
        for(Plane pl : aln.getAirliner())
        {
           if(modelNum.equals(pl.getModelNumber()))
           {
                Object row[] = new Object[2];
                row[0] = pl;
                row[1] = pl.getModelNumber();
                dtm.addRow(row);
           }
         }
    }//GEN-LAST:event_fliter7ActionPerformed

    private void fliter8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter8ActionPerformed
        // TODO add your handling code here:
       tablePlane.getColumnModel().getColumn(1).setHeaderValue("Manufacturer");
       jScrollPane1.updateUI();
       DefaultTableModel dtm = (DefaultTableModel)tablePlane.getModel(); 
       for(Plane pl : aln.getAirliner())
       {
            
             Object row[] = new Object[2];
             row[0] = pl;
             row[1] = pl.getManufacture();
             dtm.addRow(row);
                 
       }
    }//GEN-LAST:event_fliter8ActionPerformed

    private void fliter9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter9ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)tableUpdateTime.getModel(); 
        Object row[] = new Object[2];
        row[0] = aln.getUpdateTime();
        System.out.println(aln.getUpdateTime());
        dtm.addRow(row);
        jScrollPane1.updateUI();
    }//GEN-LAST:event_fliter9ActionPerformed

    private void fliter10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter10ActionPerformed
        // TODO add your handling code here:
       tablePlane.getColumnModel().getColumn(1).setHeaderValue("Airport");
       jScrollPane1.updateUI();
       jScrollPane1.updateUI();
       String airPort = txtAirport.getText();
       DefaultTableModel dtm = (DefaultTableModel)tablePlane.getModel(); 
       dtm.setRowCount(0);
       for(Plane pl : aln.getAirliner())
       {
            if(airPort.equals(pl.getSchedule().getAirport()))
            {
                Object row[] = new Object[2];
                row[0] = pl;
                row[1] = pl.getSchedule().getAirport();
                dtm.addRow(row);
            }   
       }
        
    }//GEN-LAST:event_fliter10ActionPerformed

    private void fliter11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fliter11ActionPerformed
        // TODO add your handling code here:
       tablePlane.getColumnModel().getColumn(1).setHeaderValue("Maintenance Certificate");
       DefaultTableModel dtm = (DefaultTableModel)tablePlane.getModel(); 
       for(Plane pl : aln.getAirliner())
       {
            if(pl.getIsExpired())
            {
                Object row[] = new Object[2];
                row[0] = pl;
                row[1] = "Expired";
                dtm.addRow(row);
            }else{
                Object row[] = new Object[2];
                row[0] = pl;
                row[1] = "Valid";
                dtm.addRow(row);
            }   
       }
    }//GEN-LAST:event_fliter11ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel airportLabel;
    private javax.swing.JLabel availLabel;
    private javax.swing.JCheckBox btnAvailable;
    private javax.swing.JCheckBox btnUnavailable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton fliter1;
    private javax.swing.JButton fliter10;
    private javax.swing.JButton fliter11;
    private javax.swing.JButton fliter2;
    private javax.swing.JButton fliter3;
    private javax.swing.JButton fliter4;
    private javax.swing.JButton fliter5;
    private javax.swing.JButton fliter6;
    private javax.swing.JButton fliter7;
    private javax.swing.JButton fliter8;
    private javax.swing.JButton fliter9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel mantenLabel;
    private javax.swing.JLabel manuLabel;
    private javax.swing.JLabel modelNumLabel;
    private javax.swing.JLabel serialNumLabel;
    private javax.swing.JTable tablePlane;
    private javax.swing.JTable tableUpdateTime;
    private javax.swing.JLabel timeLable;
    private javax.swing.JTextField txtAirport;
    private javax.swing.JTextField txtMaxSeat;
    private javax.swing.JTextField txtMinSeat;
    private javax.swing.JTextField txtModelNumberF;
    private javax.swing.JTextField txtSerialNumber;
    private javax.swing.JTextField txtYear;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
}
