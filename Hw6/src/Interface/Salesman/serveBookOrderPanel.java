/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Salesman;

import Business.business;
import Business.customer;
import Business.market;
import Business.market_offer;
import Business.salesFunction.order;
import Business.salesFunction.order_item;
import Business.sales_person;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yin
 */
public class serveBookOrderPanel extends javax.swing.JPanel {

    /**
     * Creates new form serveBookOrderPanel
     */

    JPanel upc;
    business b;
    sales_person s;
    market m;
    customer c;
    order o;
    serveBookOrderPanel(JPanel upc, business b, sales_person s, market m, customer c) {
        initComponents();
        this.upc = upc;
        this.s = s;
        this.b = b;
        this.m = m;
        this.c= c;
        populateTable();
        
        txtMarket.setText(m.getName());
        o = s.addOrder();
        
    }

    public void populateTable(){
    
        DefaultTableModel dtm = (DefaultTableModel) tblMOC.getModel();
        dtm.setRowCount(0);
        for (market_offer mo: b.getMoc().getMarketOfferList()){
            if(mo.getMarket().equals(m.getName())){
            Object[] row = new Object[7];
            row[0] = mo;
            row[1] = mo.getP().getName();
            row[2] = mo.getFloor();
            row[3] = mo.getCeiling();
            row[4] = mo.getTarget();
           dtm.addRow(row);
            }
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMOC = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        txtActualPrice = new javax.swing.JTextField();
        BtnSubmit = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txtTotal = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        spinnerQuantity = new javax.swing.JSpinner();
        jButton5 = new javax.swing.JButton();
        txtMarket = new javax.swing.JLabel();

        tblMOC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ProductID", "ProductName", "FloorPrice", "CeilingPrice", "TargetPrice"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMOC);

        jLabel1.setFont(new java.awt.Font("Didot", 0, 18)); // NOI18N
        jLabel1.setText("Actual Price: $  ");

        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ProductID", "ProductName", "Quantity", "ActualPrice"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCart);

        jButton1.setText("Add to Cart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtActualPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtActualPriceActionPerformed(evt);
            }
        });

        BtnSubmit.setText("Submit Order");
        BtnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSubmitActionPerformed(evt);
            }
        });

        jButton3.setText("< Cancel Order");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Clear cart");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        txtTotal.setFont(new java.awt.Font("DIN Alternate", 0, 18)); // NOI18N
        txtTotal.setText("$ 0.00");

        jLabel3.setFont(new java.awt.Font("DIN Alternate", 0, 18)); // NOI18N
        jLabel3.setText("Market Offer for the Market: ");

        jLabel4.setFont(new java.awt.Font("Didot", 0, 18)); // NOI18N
        jLabel4.setText("Total Price in Cart: ");

        spinnerQuantity.setModel(new javax.swing.SpinnerNumberModel(1, null, 10, 1));

        jButton5.setText("Remove Item");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        txtMarket.setFont(new java.awt.Font("DIN Alternate", 0, 18)); // NOI18N
        txtMarket.setText("hehe");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnSubmit))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtMarket)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtActualPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal)
                        .addGap(35, 35, 35))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMarket))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(txtActualPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnSubmit)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(12, 12, 12))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtActualPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtActualPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtActualPriceActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblMOC.getSelectedRow();
        
        if(selectedRow<0){  //未选择
            JOptionPane.showMessageDialog(null,"Please select a [Product Offer]");
        }else if(txtActualPrice.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please input your price");
        }else{
            int quantity = (int) spinnerQuantity.getValue();
            int actualPrice = actualPrice = Integer.parseInt(txtActualPrice.getText());
            market_offer mo = (market_offer) tblMOC.getValueAt(selectedRow, 0);
            if(actualPrice >= mo.getCeiling() || actualPrice <= mo.getFloor()){
                JOptionPane.showMessageDialog(null,"actual price should be in the range");
            }else{
                if(o.checkItemExist(mo.getP().getID()) == true){
                 JOptionPane.showMessageDialog(null,"product Exist");
                
                }else{
                     order_item oi = o.addOrderItem();
                     oi.setActualPrice(actualPrice);
                     oi.setQuantity(quantity);
                     oi.setProduct(mo.getP());    
                }   
                }
                
            }
                populateCart();
                    
                
   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        o.getOia().clear();
        populateCart();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:int selectedRow = tblMOC.getSelectedRow();
        int selectedRow = tblCart.getSelectedRow();
        if(selectedRow<0){  //未选择
            JOptionPane.showMessageDialog(null,"Please select a [Item]");
        }else{
            order_item oi = (order_item) tblCart.getValueAt(selectedRow, 0);
            o.getOia().remove(oi);
            populateCart();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void BtnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSubmitActionPerformed
        // TODO add your handling code here:
        
        if(o.getOia().isEmpty()){
            
            JOptionPane.showMessageDialog(null,"Your order is empty");
            
        }else{
            o.setCustomer(c.getName());
            o.setMarket(m.getName());
        JOptionPane.showMessageDialog(null,"Order: ["+o.getId()+"]  Submited successfully");
        upc.remove(this);
       
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
        
        }
        
    }//GEN-LAST:event_BtnSubmitActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        upc.remove(this);
        //加载上一个component，并且使用它的刷新表格方法
       /*
        Component[] componentArray = upc.getComponents();
        Component component = componentArray[componentArray.length - 1];
        salesmanWelcomePanel swp =  (salesmanWelcomePanel) component;
        swp.clearText();
*       */
       
        s.getOa().remove(o);
        
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_jButton3ActionPerformed

    public void populateCart(){
        DefaultTableModel dtm = (DefaultTableModel) tblCart.getModel();
        dtm.setRowCount(0);
        for (order_item oi: o.getOia()){
            
            Object[] row = new Object[7];
            row[0] = oi;
            row[1] = oi.getProduct().getName();
            row[2] = oi.getQuantity();
            row[3] = oi.getActualPrice();
            
            dtm.addRow(row);
            
        
        }
        refreshTotal();
        
        
    }
    
    public void refreshTotal(){
        int totalPrice = 0;
        for(order_item oi: o.getOia()){
            totalPrice = totalPrice + oi.getActualPrice()* oi.getQuantity();
        }
        txtTotal.setText(String.valueOf(totalPrice));
        o.setTotal_price(totalPrice);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnSubmit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spinnerQuantity;
    private javax.swing.JTable tblCart;
    private javax.swing.JTable tblMOC;
    private javax.swing.JTextField txtActualPrice;
    private javax.swing.JLabel txtMarket;
    private javax.swing.JLabel txtTotal;
    // End of variables declaration//GEN-END:variables
}
